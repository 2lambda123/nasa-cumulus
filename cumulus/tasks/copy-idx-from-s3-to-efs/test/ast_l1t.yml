providers:
  - id: LPDAAC_DATAPOOL
    config:
      gateway_config:
        activity: LPDAACDownloadActivity
        sync_activity: LPDAACSyncActivity
        conn_config:
          conn_type: http
        num_connections: 20

_templates:
  _retry_behavior: &retry_behavior
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 3
        MaxAttempts: 3
        BackoffRate: 1.5

  _collection_types:
    - &AST_L1T
      provider_id: LPDAAC_DATAPOOL

      workflow: !GitcResource DiscoverASTER

      trigger:
        type: once

      workflow_config_template:
        arns_to_name_mappings:
          - name: DiscoverCmrGranules
            arn: !GitcResource DiscoverCmrGranulesFn.Arn
          - name: SyncHttpUrls
            arn: !GitcResource SyncHttpUrlsFn.Arn
          - name: GenerateMrfFromTiff
            arn: !GitcResource RunGdalFn.Arn

        DiscoverCmrGranules:
          root: 'https://cmr.earthdata.nasa.gov'
          urls: '{meta.url_pattern}'
          ingest_tracking_table: !GitcResource IngestTable
          query:
            page_size: 25
            collection_concept_id: C1000000320-LPDAAC_ECS
            day_night_flag: '{meta.day_night_flag}'
            browse_only: true
            temporal: 2016-12-01T00:00:00Z,2016-12-01T01:18:30Z # Normal latitude
            # temporal: 2016-05-31T13:22:08.000Z,2016-05-31T13:22:09.000Z # High latitude
            # temporal: 2015-01-01T00:00:00Z,2015-01-01T06:00:00Z # Small-ish test-case (98 granules)
            #temporal: 2015-01-01T00:00:00Z,2015-01-02T18:39:00Z # Exactly 949 (+1 that has no day_night_flag)
          granule_meta:
            key: '{meta.collection}/{granule.id}'
            polygons: '{granule.polygons}'
            box: '{granule.box}'
            granuleId: '{granule.id}'
            version: '{granule.updated}'
            date:
              type: date
              value: '{granule.time_start}'

        TriggerIngest:
          workflow: !GitcResource IngestASTER
          sqsQueueUrl: !GitcResource AsterL1TIngestThrottlingQueue

        TriggerProcessing:
          key: '{meta.key}'
          workflow: !GitcResource ProcessASTER
          sqsQueueUrl: !GitcResource AsterL1TProcessThrottlingQueue

        SyncHttpUrls:
          stateless: true
          connections: 1
          auth:
            # NOTE: This looks sensitive, but is actually benign. It's an Earthdata Login account with
            #       no access to anything, used to enable metrics on the LPDAAC data pool. About the same
            #       level of sensitivity as CMR-Client-Id
            username: gitc
            password: TEhNOwiLwzgTEke3dfsmbi
          output:
            bucket: '{resources.buckets.private}'
            key_prefix: 'sources/EPSG4326/AST_L1T/'

        DeleteIngestTrackingData:
          ingest_tracking_table: !GitcResource IngestTable
          granule_meta:
            granuleId: '{meta.granuleId}'
            version: '{meta.version}'

        CopyIdxFromS3:
          dirname: './tempdata'

        GenerateMrfFromTiff:
          additional_files:
            - Bucket: "{resources.buckets.config}"
              Key: "ingest/empty_tiles/Blank_RGBA_512.png"
            - Bucket: "{resources.buckets.config}"
              Key: "ingest/mrfconfig/ast_l1t.xml"

          input_filenames:
            - input.tif
            - Blank_RGBA_512.png
            - mrfgen_configuration_file.xml

          alternate_commands:
            - gdal_command: gdalwarp
              args: [
                -of, GTiff,
                -cutline, /tmp/left_side_cmr.json,
                -crop_to_cutline,
                -t_srs, EPSG:4326,
                -tr, 0.0001373291015625, 0.0001373291015625,
                -srcnodata, "0 0 0",
                -dstalpha,
                -r, near,
                -overwrite,
                input.tif,
                in/processed_left_4326.tif
              ]
            - gdal_command: gdalwarp
              args: [
                -of, GTiff,
                -cutline, /tmp/right_side_cmr.json,
                -crop_to_cutline,
                -t_srs, EPSG:4326,
                -tr, 0.0001373291015625, 0.0001373291015625,
                -srcnodata, "0 0 0",
                -dstalpha,
                -r, near,
                -overwrite,
                input.tif,
                in/processed_right_4326.tif
              ]

          commands:
            - gdal_command: gdalwarp
              args: [
                -q,
                -of, GTiff,
                -t_srs, "EPSG:4326",
                -srcnodata, "0 0 0",
                -dstalpha,
                -r, near,
                -tr, 0.0001373291015625, 0.0001373291015625,
                -overwrite,
                input.tif,
                in/processed.tif
              ]
            - gdal_command: mrfgen.py
              args: []

            #- gdal_command: gdalbuildvrt
            #  args: [
            #    -q,
            #    -te, -180, -90, 180, 90,
            #    -a_srs, EPSG:4326,
            #    processed.vrt,
            #    processed.png
            #  ]
            #- gdal_command: gdalwarp
            #  args: [
            #    -of, VRT,
            #   -r, average,
            #    -ts, 2621440, 1310720,
            #    -te, -180, -90, 180, 90,
            #    -overwrite,
            #    processed.vrt,
            #    resampled.vrt
            #  ]
            #- gdal_command: gdal_translate
            #  args: [
            #    -q,
            #    -of, MRF,
            #    -outsize, 2621440, 1310720,
            #    -co, COMPRESS=PNG,
            #    -co, BLOCKSIZE=512,
            #    -co, NOCOPY=true,
            #    -co, UNIFORM_SCALE=2,
            #    resampled.vrt,
            #    out.mrf
            #  ]
            #- gdal_command: gdalwarp
            #  args: [
            #    -of, VRT,
            #    -r, average,
            #    -overwrite,
            #    -tr, 0.0001373291015625, 0.0001373291015625,
            #    processed.png,
            #    processed.png.vrt
            #  ]
            #- gdal_command: mrf_insert
            #  args: [
            #    -r, AVG,
            #    processed.png.vrt,
            #    out.mrf
            #  ]

          outputs:
            - filename: out/out.mrf
              dest:
                Bucket: '{resources.buckets.public}'
                Key: 'archive/geographic/aster_l1t/mrfs/AST_L1T_LL/AST_L1T_LL{meta.date.dateTimeStamp}_.mrf'
            - filename: out/out.idx
              compress: true
              dest:
                Bucket: '{resources.buckets.public}'
                Key: 'archive/geographic/aster_l1t/mrfs/AST_L1T_LL/AST_L1T_LL{meta.date.dateTimeStamp}_.idx.tgz'
            - filename: out/out.ppg
              dest:
                Bucket: '{resources.buckets.public}'
                Key: 'archive/geographic/aster_l1t/mrfs/AST_L1T_LL/AST_L1T_LL{meta.date.dateTimeStamp}_.ppg'

_workflow_meta:
  - id: DiscoverASTER
    name: AST_L1T Discovery
    arn: !GitcResource DiscoverASTER
    type: discovery
  - id: IngestASTER
    name: AST_L1T Ingest
    arn: !GitcResource IngestASTER
    type: ingest
    parent: DiscoverASTER
  - id: ProcessASTER
    name: AST_L1T Processing
    arn: !GitcResource ProcessASTER
    type: ingest
    parent: IngestASTER

workflows:
  DiscoverASTER:
    Comment: AST_L1T Discovery
    StartAt: DiscoverCmrGranules
    States:
      DiscoverCmrGranules:
        <<: *retry_behavior
        Type: Task
        Resource: !GitcResource DiscoverCmrGranulesFn.Arn
        Next: TriggerIngest

      TriggerIngest:
        <<: *retry_behavior
        Type: Task
        Resource: !GitcResource TriggerIngestFn.Arn
        Next: ChooseContinuation

      ChooseContinuation:
        Type: Choice
        Choices:
          - Variable: $.payload.scrollID
            BooleanEquals: false
            Next: EndScroll
        Default: DiscoverCmrGranules

      EndScroll:
        Type: Pass
        Result: Scrolling completed
        End: true

  IngestASTER:
    Comment: AST_L1T Ingest
    StartAt: SyncHttpUrls
    States:
      SyncHttpUrls:
        <<: *retry_behavior
        Type: Task
        Resource: !GitcResource SyncHttpUrlsFn.Arn
        TimeoutSeconds: 600
        Next: TriggerProcessing

      TriggerProcessing:
        <<: *retry_behavior
        Type: Task
        Resource: !GitcResource TriggerIngestFn.Arn
        End: true

  ProcessASTER:
    Comment: AST_L1T Processing
    StartAt: GenerateMrfFromTiff
    States:
      GenerateMrfFromTiff:
        <<: *retry_behavior
        Type: Task
        Resource: !GitcResource RunGdalFn.Arn
        Next: CopyIdxFromS3
      CopyIdxFromS3:
        <<: *retry_behavior
        Type: Task
        Resource: !GitcResource CopyIdxFromS3Fn.Arn
        Next: DeleteIngestTrackingData
      DeleteIngestTrackingData:
        <<: *retry_behavior
        Type: Task
        Resource: !GitcResource DeleteIngestTrackingDataFn.Arn
        End: True

collections:
  - <<: *AST_L1T
    id: AST_L1T_DAY
    meta:
      collection: AST_L1T_LL
      day_night_flag: 'day'
      url_pattern: '_V.tif$'

  - <<: *AST_L1T
    id: AST_L1T_NIGHT
    meta:
      collection: AST_L1T_LL
      day_night_flag: 'night'
      url_pattern: '_T.tif$'