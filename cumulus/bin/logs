#!/bin/bash

set -e

version=v0.0.1
progname=$(basename $0)
docstr="$progname $version: Fetches AWS ingest logs"

usage() {
echo "Usage:
  $progname id

Options:
  id              The stack name whose logs need to be fetched

Examples:
  $progname myid"
}

function echoerr() {
    echo "Error: $@" 1>&2;
}

region=us-west-2
prefix=""
streams=5
lines=100

while [[ $# -gt 0 ]]
do

    key="$1"

    if [[ $key == -* ]]; then
        # Dash argument
        case $key in
            --ngap)
                prefix="gsfc-ngap-"
                ;;
            --group)
                prefixes=("$2")
                shift
                ;;
            --streams)
                streams="$2"
                shift
                ;;
            --lines)
                lines="$2"
                shift
                ;;
            --region)
                region="$2"
                shift
                ;;
            --help)
                echo "$docstr"
                echo
                usage
                exit 0
                ;;
            *)
                echoerr "Unknown option: $key"
                exit 2
                ;;
        esac
    else
        # Positional argument
        args+=("$key")
    fi
    shift
done

if [ "${#args[@]}" -ne 1 ]; then
    echo "$docstr"
    echo
    usage
    exit 1
fi

stack_name=${args[0]}

if [ -z "$prefixes" ]; then
    prefixes=(
        "/aws/lambda/$stack_name-task"
        "$stack_name-task"
        "$stack_name-service"
        "$stack_name-transactions"
    )
fi

function get_groups_for_prefix() {
    aws logs describe-log-groups \
        --region $region \
        --output text \
        --log-group-name-prefix $1 | awk '{ print $4 }'
}

function get_streams() {
    aws logs describe-log-streams \
        --region $region \
        --output text \
        --log-group-name $1 \
        --order-by LastEventTime \
        --descending \
        --max-items $streams | awk '{ print $7 }'
}

function get_logs() {
    aws logs get-log-events \
        --region $region \
        --output text \
        --log-group-name $1 \
        --log-stream-name "$2" \
        --start-time "$((`date +%s` - 3600))000" \
        --limit $lines \
        --no-start-from-head |
        awk '
          $1 == "EVENTS" { $1=""; print $0; next }
          1 { print }
          '
}

groups=()

echo "Discovering log groups..."
for p in ${prefixes[@]}; do
    groups+=($(get_groups_for_prefix $p))
done

for group in ${groups[@]}; do
    echo
    echo "=========== $group ==========="
    streamIds=$(get_streams $group)
    for stream in ${streamIds[@]}; do
        echo "Stream: $stream"
        get_logs $group $stream
    done
done


#aws describe-log-streams \
#    --region=$region \
#    --log-group-name
