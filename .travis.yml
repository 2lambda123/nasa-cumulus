git:
  depth: 1

language: node_js

stages:
  - name: build cache
  - name: unit test
  - name: deploy integration test stack
  - name: parallel integration tests
  - name: serial integration tests
  - name: cleanup integration tests
  - name: deploy
    if: type != pull_request AND tag =~ ^v\d+
  - name: deployment test
    if: type != pull_request AND tag =~ ^v\d+

jobs:
  include:
    - name: "Build npm cache"
      stage: build cache
      install: true
      script: ./travis-ci/build-cache.sh

    - name: "eslint"
      stage: unit test
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./node_modules/.bin/eslint packages/api --ext .js
    - name: "Unit tests except API"
      stage: unit test
      services:
        - docker
      env:
        - LOCALSTACK_HOST=127.0.0.1
        - LOCAL_ES_HOST=127.0.0.1
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
        - ./travis-ci/start-local-services.sh
      script: ./node_modules/.bin/nyc ./node_modules/.bin/lerna run test --ignore @cumulus/api
    - name: "API unit tests"
      stage: unit test
      services:
        - docker
      env:
        - LOCALSTACK_HOST=127.0.0.1
        - LOCAL_ES_HOST=127.0.0.1
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
        - ./travis-ci/start-local-services.sh
      script: ./travis-ci/run-api-unit-tests.sh
    - name: "e2e tests"
      stage: unit test
      services:
        - docker
      env:
        - LOCALSTACK_HOST=127.0.0.1
        - LOCAL_ES_HOST=127.0.0.1
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
        - ./travis-ci/start-local-services.sh
      script: npm run e2e

    - name: "Deploy Integration Test Stack"
      stage: deploy integration test stack
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 ./travis-ci/init-integration-tests.sh
      after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    - name: "Run BackupRestore integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/backupRestore/BackupRestoreSpec.js"

    - name: "Run Reconciliation integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/createReconciliationReport/CreateReconciliationReportSpec.js"

    - name: "Run DiscoverPdrs integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/discoverAndQueuePdrs/DiscoverAndQueuePdrsSuccessSpec.js"

    - name: "Run DiscoverGranules integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/discoverGranules/DiscoverGranulesSuccessSpec.js"

    - name: "Run EMSReport integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/emsReport/emsReportSpec.js"

    - name: "Run HelloWorld ECS integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/helloWorld/HelloWorldEcsSpec.js"

    - name: "Run HelloWorld integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/helloWorld/HelloWorldSuccessSpec.js"

    - name: "Run IngestGranuleFailure integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/ingestGranule/IngestGranuleFailureSpec.js"

    - name: "Run IngestGranuleFtp integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/ingestGranule/IngestGranuleFtpSuccessSpec.js"
    
    - name: "Run IngestGranuleSuccess integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/ingestGranule/IngestGranuleSuccessSpec.js"
    
    - name: "Run KinesisError integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/kinesisTests/KinesisTestErrorSpec.js"

    - name: "Run KinesisError integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/kinesisTests/KinesisTestSuccessSpec.js"

    - name: "Run ParsePdr integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/parsePdr/ParsePdrSuccessSpec.js"

    - name: "Run RetryConfig integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/retryConfiguration/retryConfigurationSpec.js"

    - name: "Run S3Access integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/s3Access/s3AccessSpec.js"

    - name: "Run SyncGranule DuplicateError integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/SyncGranule/SyncGranuleDuplicateHandlingErrorSpec.js"

    - name: "Run SyncGranule integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/SyncGranule/SyncGranuleSuccessSpec.js"

    - name: "Run API integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/testAPI/APISuccessSpec.js"

    - name: "Run ExecutionStatus integration tests"
      stage: parallel integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/testAPI/ExecutionStatusSpec.js"
      
    - name: "Run Lambda Redeployment integration tests"
      stage: serial integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/redeployment/LambdaRedeploySpec.js"

    - name: "Run Workflow Redeployment integration tests"
      stage: serial integration tests
      if: commit_message !~ \[skip-integration-tests\]
      install:
            - ./travis-ci/fetch-cache.sh
            - npm install
            - npm run bootstrap-no-build
      script: ./travis-ci/travis_wait_new 50 "./travis-ci/run-integration-tests.sh ./spec/redeployment/WorkflowRedeploySpec.js"
      after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    - name: "Cleanup integration tests"
      stage: cleanup integration tests
      if: commit_message !~ \[skip-integration-tests\]
      script: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    - name: "Deploy to NPM"
      stage: deploy
      install:
        - ./travis-ci/fetch-cache.sh
        - npm install
        - npm run bootstrap-no-build
      script: ./travis-ci/deploy-to-npm.sh
    - name: "Deploy to Github Pages"
      stage: deploy
      install: npm install
      script: ./travis-ci/deploy-to-github-pages.sh

    - name: "Run integration tests against deployed packages"
      stage: deployment test
      if: commit_message !~ \[skip-integration-tests\]
      install: true
      script: ./travis-ci/run-integration-tests.sh
      env:
        - DEPLOYMENT=cumulus-from-npm
        - USE_NPM_PACKAGES=true
