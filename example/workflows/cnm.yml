KinesisTriggerTest:
  Comment: 'Tests Workflow from Kinesis Stream'
  StartAt: TranslateMessage
  States:
    TranslateMessage:
      Type: Task
      Resource: ${CNMToCMALambdaFunction.Arn}
      CumulusConfig:
        cumulus_message:
          outputs:
            - source: '{$.cnm}'
              destination: '{$.meta.cnm}'
            - source: '{$}'
              destination: '{$.payload}'
      Retry:
        - &LambdaServiceExceptionRetry
          ErrorEquals:
          - Lambda.ServiceException
          - Lambda.AWSLambdaException
          - Lambda.SdkClientException
          IntervalSeconds: 2
          MaxAttempts: 6
          BackoffRate: 2
      Catch:
        - &ErrorEqualDefaults
          ErrorEquals:
          - States.ALL
          ResultPath: '$.exception'
          Next: CnmResponseFail
      Next: SyncGranule
    SyncGranule:
      Type: Task
      Resource: ${SyncGranuleLambdaFunction.Arn}
      CumulusConfig:
        provider: '{$.meta.provider}'
        buckets: '{$.meta.buckets}'
        collection: '{$.meta.collection}'
        downloadBucket: '{$.meta.buckets.private.name}'
        stack: '{$.meta.stack}'
        cumulus_message:
          outputs:
            - source: '{$.granules}'
              destination: '{$.meta.input_granules}'
            - source: '{$}'
              destination: '{$.payload}'
      Retry:
        - ErrorEquals:
            - States.ALL
          IntervalSeconds: 10
          MaxAttempts: 3
      Catch:
        - <<: *ErrorEqualDefaults
      Next: CnmResponse
    CnmResponse: &CnmResponseDefaults
      CumulusConfig:
        OriginalCNM: '{$.meta.cnm}'
        CNMResponseStream: '{$.meta.cnmResponseStream}'
        region: 'us-east-1'
        WorkflowException: '{$.exception}'
        cumulus_message:
          outputs:
            - source: '{$}'
              destination: '{$.meta.cnmResponse}'
            - source: '{$}'
              destination: '{$.payload}'
      Type: Task
      Resource: ${CnmResponseLambdaFunction.Arn}
      Retry:
        - <<: *LambdaServiceExceptionRetry
      Catch:
        - <<: *ErrorEqualDefaults
          Next: WorkflowFailed
      Next: WorkflowSucceeded
    CnmResponseFail:
      <<: *CnmResponseDefaults
      Catch:
        - <<: *ErrorEqualDefaults
          Next: WorkflowFailed
      Next: WorkflowFailed
    WorkflowSucceeded:
      Type: Succeed
    WorkflowFailed:
      Type: Fail
      Cause: 'Workflow failed'
