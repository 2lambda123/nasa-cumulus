
default:
  prefix: change-me
  stackName: '{{prefix}}-integration'
  # stackNameNoDash: TestCumulusIntegration
  shared_data_bucket: cumulus-data-shared
  api_distribution_url: https://example.com/
  params:
    - name: CmrPassword
      value: '{{CMR_PASSWORD}}'
    - name: DockerEmail
      value: '{{DOCKER_EMAIL}}'
    - name: DockerPassword
      value: '{{DOCKER_PASS}}'

  apiStage: dev

  vpc:
    vpcId: '{{VPC_ID}}'
    subnets:
      - '{{AWS_SUBNET}}'

  ecs:
    instanceType: t2.small
    desiredInstances: 1
    availabilityZone: us-east-1b
    amiid: ami-a7a242da
    publicIp: true
    restartTasksOnDeploy: true
    keyPairName: abarciauskas-ecs
    docker:
      username: cumulususer
    services:
      EcsTaskHelloWorld:
        image: cumuluss/cumulus-ecs-task:1.1.2
        cpu: 400
        memory: 700
        count: 1
        envs:
          AWS_DEFAULT_REGION:
            function: Fn::Sub
            value: '${AWS::Region}'
        commands:
          - cumulus-ecs-task
          - '--activityArn'
          - function: Ref
            value: EcsTaskHelloWorldActivity
          - '--lambdaArn'
          - function: Ref
            value: HelloWorldLambdaFunction

  activities:
    - name: EcsTaskHelloWorld

  system_bucket: '{{buckets.internal.name}}'

  buckets:
    internal:
      name: cumulus-test-sandbox-internal
      type: internal
    private:
      name: cumulus-test-sandbox-private
      type: private
    protected:
      name: cumulus-test-sandbox-protected
      type: protected
    public:
      name: cumulus-test-sandbox-public
      type: public
    shared:
      name: cumulus-data-shared
      type: shared

  cmr:
    username: '{{CMR_USERNAME}}'
    provider: CUMULUS
    clientId: CUMULUS
    password: '{{CMR_PASSWORD}}'

  iams:
    ecsRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-ecs'
    lambdaApiGatewayRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-lambda-api-gateway'
    lambdaProcessingRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-lambda-processing'
    stepRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-steprole'
    instanceProfile: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:instance-profile/{{prefix}}-ecs'
    distributionRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-distribution-api-lambda'

  sns:
    inregions3:
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - InRegionS3PolicyLambdaFunction
              - Arn
    AmazonIpSpaceChanged:
      arn: arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - InRegionS3PolicyLambdaFunction
              - Arn

  urs_url: https://uat.urs.earthdata.nasa.gov/ #make sure to include the trailing slash

    # if not specified the value of the apigateway backend endpoint is used
    # api_backend_url: https://apigateway-url-to-api-backend/ #make sure to include the trailing slash

    # if not specified the value of the apigateway dist url is used
    # api_distribution_url: https://apigateway-url-to-distribution-app/ #make sure to include the trailing slash

  # URS users who should have access to the dashboard application.
  users:
    - username: testuser

cumulus-from-npm:
  prefix: test-npm # used by the integration repo
  stackNameNoDash: TestNpmIntegration

cumulus-from-source:
  prefix: test-src # used by the cumulus repo
  stackNameNoDash: TestSourceIntegration

aj:
  prefix: aj
  stackNameNoDash: AjIntegration

lf:
  prefix: lf-cumulus
  stackName: lf-cumulus
  stackNameNoDash: lfCumulus

aimee-test:
  prefix: aimee-test
  stackNameNoDash: aimeeTest

  buckets:
    internal: 
      name: cumulus-devseed-internal
      type: internal
    private:
      name: cumulus-devseed-private
      type: private
    protected:
      name: cumulus-devseed-protected
      type: protected
    public:
      name: cumulus-devseed-public
      type: public
    shared:
      name: cumulus-data-shared
      type: shared

mth-cum-test:
  prefix: mth-cum-test
  stackNameNoDash: MthCumTestIntegration
  buckets:
    internal: '{{prefix}}-internal'
    protected: '{{prefix}}-protected'
    private: '{{prefix}}-private'
  iams:
    ecsRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-ecs'
    lambdaApiGatewayRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-lambda-api-gateway'
    lambdaProcessingRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-lambda-processing'
    stepRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{prefix}}-steprole'
    instanceProfile: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:instance-profile/{{prefix}}-ecs'
  users:
    - username: '{{EARTHDATA_LOGIN_USERNAME}}'

jl:
  prefix: jl-test
  stackNameNoDash: JlTestIntegration
