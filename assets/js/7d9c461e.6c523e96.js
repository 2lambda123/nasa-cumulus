"use strict";(self.webpackChunk_cumulus_website=self.webpackChunk_cumulus_website||[]).push([[6978],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(a),f=s,m=c["".concat(l,".").concat(f)]||c[f]||d[f]||r;return a?n.createElement(m,o(o({ref:t},p),{},{components:a})):n.createElement(m,o({ref:t},p))}));function m(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,o=new Array(r);o[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<r;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},78118:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var n=a(87462),s=a(63366),r=(a(67294),a(3905)),o=["components"],i={id:"files_to_granules",title:"Files To Granules",hide_title:!1},l=void 0,u={unversionedId:"workflow_tasks/files_to_granules",id:"version-v15.0.2/workflow_tasks/files_to_granules",title:"Files To Granules",description:"This task utilizes the Cumulus Message Adapter to interpret and construct incoming and outgoing messages.",source:"@site/versioned_docs/version-v15.0.2/workflow_tasks/files_to_granules.md",sourceDirName:"workflow_tasks",slug:"/workflow_tasks/files_to_granules",permalink:"/cumulus/docs/workflow_tasks/files_to_granules",draft:!1,tags:[],version:"v15.0.2",lastUpdatedBy:"Naga Nages",lastUpdatedAt:1682721685,formattedLastUpdatedAt:"Apr 28, 2023",frontMatter:{id:"files_to_granules",title:"Files To Granules",hide_title:!1},sidebar:"docs",previous:{title:"Discover Granules",permalink:"/cumulus/docs/workflow_tasks/discover_granules"},next:{title:"LZARDS Backup",permalink:"/cumulus/docs/workflow_tasks/lzards_backup"}},p={},c=[{value:"Summary",id:"summary",level:2},{value:"Task Inputs",id:"task-inputs",level:2},{value:"Input",id:"input",level:3},{value:"Configuration",id:"configuration",level:3},{value:"inputGranules",id:"inputgranules",level:4},{value:"Task Outputs",id:"task-outputs",level:2}],d={toc:c},f="wrapper";function m(e){var t=e.components,a=(0,s.Z)(e,o);return(0,r.kt)(f,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This task utilizes the Cumulus Message Adapter to interpret and construct incoming and outgoing messages."),(0,r.kt)("p",null,"Links to the npm package, task input, output and configuration schema definitions and more can be found on the auto-generated ",(0,r.kt)("a",{parentName:"p",href:"../tasks"},"Cumulus Tasks")," page."),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"This task utilizes the incoming ",(0,r.kt)("inlineCode",{parentName:"p"},"config.inputGranules")," and the task input list of s3 URIs along with the rest of the configuration objects to take the list of incoming files and sort them into a list of granule objects."),(0,r.kt)("p",null,"  ",(0,r.kt)("strong",{parentName:"p"},"Please note")," Files passed in without metadata defined previously for ",(0,r.kt)("inlineCode",{parentName:"p"},"config.inputGranules")," will be added with the following keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"size"),(0,r.kt)("li",{parentName:"ul"},"bucket"),(0,r.kt)("li",{parentName:"ul"},"key"),(0,r.kt)("li",{parentName:"ul"},"fileName")),(0,r.kt)("p",null,"It is primarily intended to support compatibility with the standard output of a processing task, and convert that output into a granule object accepted as input by the majority of other Cumulus tasks."),(0,r.kt)("h2",{id:"task-inputs"},"Task Inputs"),(0,r.kt)("h3",{id:"input"},"Input"),(0,r.kt)("p",null,"This task expects an incoming input that contains an array  of 'staged' S3 URIs to move to their final archive location."),(0,r.kt)("p",null,"For the specifics, see the ",(0,r.kt)("a",{parentName:"p",href:"../tasks"},"Cumulus Tasks page")," entry for the schema."),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"This task does expect values to be set in the ",(0,r.kt)("inlineCode",{parentName:"p"},"workflow_config")," CMA parameters for the workflows.  A schema exists that defines the requirements for the task."),(0,r.kt)("p",null,"For the most recent config.json schema, please see the ",(0,r.kt)("a",{parentName:"p",href:"../tasks"},"Cumulus Tasks page")," entry for the schema."),(0,r.kt)("p",null,"Below are expanded descriptions of selected config keys:"),(0,r.kt)("h4",{id:"inputgranules"},"inputGranules"),(0,r.kt)("p",null,"An array of Cumulus ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus/blob/master/packages/api/models/schemas.js"},"granule")," objects."),(0,r.kt)("p",null,"This object will be used to define metadata values for the move granules task, and is the basis for the updated object that will be added to the output."),(0,r.kt)("h2",{id:"task-outputs"},"Task Outputs"),(0,r.kt)("p",null,"This task outputs an assembled array of Cumulus ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus/blob/master/packages/api/models/schemas.js"},"granule")," objects as the payload for the next task, and returns only the expected payload for the next task."))}m.isMDXComponent=!0}}]);